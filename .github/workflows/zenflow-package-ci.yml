# .github/workflows/zenflow-package-ci.yml
# .github/workflows/zenflow-package-ci.yml
name: ZenFlow Package CI & Docs

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*' 
    paths:
      - 'zenflow/**'
      - '.github/workflows/zenflow-package-ci.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'zenflow/**'
      - '.github/workflows/zenflow-package-ci.yml'
  workflow_dispatch: # Allows manual triggering

jobs:
  lint-and-test:
    # ... (same as before) ...
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the latest version of ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: "--version"

      - name: Install Hatch and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
          pip install .[dev]
          hatch env create # Creates default test environment


      - name: Lint with Ruff (via Hatch)
        run: hatch run lint-all

      - name: Run tests with Pytest (via Hatch)
        run: hatch run test-cov

  build-package:
    # ... (same as before, ensure it depends on lint-and-test) ...
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') # Trigger on version tags

    steps:
      - name: Checkout repository
        if: ${{ !env.ACT }}
        uses: actions/checkout@v4

      - name: Set up Python
        if: ${{ !env.ACT }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Hatch
        if: ${{ !env.ACT }}
        run: pip install hatch

      - name: Build package
        working-directory: .
        run: hatch build

      - name: Store package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zenflow-package-${{ github.sha }}
          path: dist/*

  build-and-deploy-docs:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') # Trigger on version tags
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Match Python version for docs build

      - name: Install Hatch and documentation dependencies
        working-directory: ./zenflow # All operations within the zenflow package directory
        run: |
          pip install hatch
          # Create and activate the 'docs' environment defined in pyproject.toml
          hatch env create docs # This uses [tool.hatch.envs.docs] and its features
          # Ensure the local zenflow package is installed editably in this env
          # Hatch might do this automatically with "zenflow @ {root:uri}" in docs deps
          # or you can force it:
          # hatch run docs:pip install -e .

      - name: Build documentation
        run: hatch run docs:docs-build # Execute 'docs-build' script within 'docs' hatch env

      - name: Deploy documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html # Path to built HTML, relative to repo root
          publish_branch: gh-pages
          force_orphan: true 

  # Optional: Publish to PyPI (or other index)
  publish-to-pypi:
    runs-on: ubuntu-latest
    needs: build-package
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') # Trigger on version tags
    environment:
      name: pypi
      url: https://pypi.org/p/zenflow
    permissions:
      id-token: write # For trusted publishing

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          name: zenflow-package-${{ github.sha }}
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }} # Store your PyPI token in GitHub secrets